{"version":3,"sources":["Message.js","firebase.js","App.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","variant","component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","prompt","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","messagesEndRef","useRef","current","scrollIntoView","behavior","src","style","display","onSubmit","event","preventDefault","add","timestamp","FieldValue","serverTimestamp","FormControl","Input","type","name","value","onChange","target","autoComplete","placeholder","IconButton","color","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAwBeA,G,MAnBCC,sBAAW,WAAwBC,GAAS,IAA9BC,EAA6B,EAA7BA,QACpBC,EADiD,EAApBC,WACPF,EAAQE,SACpC,OACI,sBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,UACI,uBAAOE,UAAU,oBAAjB,UAAuCF,GAAD,UAAcD,EAAQE,UAAY,kBACxE,cAACE,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,qBAAhD,SACI,cAACI,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,QAAQ,KACRC,UAAU,KAFd,SAIKR,EAAQA,qB,gBCDlBS,EAbKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,YC4ERC,MA3Ef,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGmBJ,mBAAS,IAH5B,mBAGNpB,EAHM,KAGIyB,EAHJ,KAKbC,qBAAU,WACRD,EAAYE,OAAO,6BAClB,IAEHD,qBAAU,WACRnB,EAAGqB,WAAW,YAAYC,QAAQ,YAAa,OAAOC,YAAW,SAAAC,GAC/DP,EAAYO,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAID,EAAIC,GAAIrC,QAASoC,EAAIE,iBAEjE,IAEH,IAAMC,EAAiBC,iBAAO,MAkB9B,OAZAZ,qBAJuB,WACrBW,EAAeE,QAAQC,eAAe,CAAEC,SAAU,aAG1B,CAAClB,IAazB,sBAAKtB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAYyC,IAAI,iFAC/B,oDACA,qBAAIC,MAAO,CAAEC,QAAS5C,EAAW,QAAU,QAA3C,iBAA0DA,EAA1D,OAEA,cAAC,IAAD,CAAUC,UAAU,eAApB,SAEIsB,EAASU,KAAI,gBAAEE,EAAF,EAAEA,GAAIrC,EAAN,EAAMA,QAAN,OACX,cAAC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCqC,QAIpB,qBAAKtC,IAAKwC,IAEV,sBAAMpC,UAAU,YAAY4C,SAzBZ,SAACC,GACnBA,EAAMC,iBACNxC,EAAGqB,WAAW,YAAYoB,IAAI,CAC5BlD,QAASuB,EACTrB,SAAUA,EACViD,UAAWzC,IAASU,UAAUgC,WAAWC,oBAE3C7B,EAAS,KAkBP,SACE,eAAC8B,EAAA,EAAD,CAAanD,UAAU,mBAAvB,UACE,cAACoD,EAAA,EAAD,CACEpD,UAAU,aACVqD,KAAK,OACLC,KAAK,QACLC,MAAOnC,EACPoC,SAAU,SAAAX,GAAK,OAAIxB,EAASwB,EAAMY,OAAOF,QACzCG,aAAa,MACbC,YAAY,sBAEd,cAACC,EAAA,EAAD,CACE5D,UAAU,kBACVqD,KAAK,SACLjD,QAAQ,YACRyD,MAAM,UACNC,UAAW1C,EALb,SAOE,cAAC,IAAD,eC3EZ2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.33783bf4.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React, { forwardRef } from 'react'\r\n\r\nimport './Message.css'\r\n\r\nconst Message = forwardRef(({ message, username }, ref) => {\r\n    const isUser = username === message.username\r\n    return (\r\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\r\n            <small className=\"message__userName\">{!isUser && `${message.username || 'Unknown User'}`}</small>\r\n            <Card className={isUser ? 'message__userCard' : 'message__guestCard'}>\r\n                <CardContent>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"h4\"\r\n                    >\r\n                        {message.message}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </div>     \r\n    )\r\n})\r\n\r\nexport default Message\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyC1TDEOWNnr6ur588SSod_jpQ7s2ZZJzyM\",\r\n    authDomain: \"fb-messenger-clone-d8adc.firebaseapp.com\",\r\n    databaseURL: \"https://fb-messenger-clone-d8adc.firebaseio.com\",\r\n    projectId: \"fb-messenger-clone-d8adc\",\r\n    storageBucket: \"fb-messenger-clone-d8adc.appspot.com\",\r\n    messagingSenderId: \"684833587192\",\r\n    appId: \"1:684833587192:web:86e526b3ff62709295e00d\",\r\n    measurementId: \"G-065T806Q3L\"\r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\n\r\nexport default db","import React, { useState, useEffect, useRef } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { FormControl, InputLabel, Input } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport FlipMove from 'react-flip-move';\n\nimport Message from './Message';\nimport './App.css';\n\nimport firebase from 'firebase'\nimport db from './firebase';\n\nfunction App() {\n  const [input, setInput] = useState(\"\") \n  const [messages, setMessages] = useState([])\n  const [username, setUsername] = useState('')\n\n  useEffect(() => {  \n    setUsername(prompt('Please enter your name'))\n  }, [])\n\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    })\n  }, [])\n\n  const messagesEndRef = useRef(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(scrollToBottom, [messages]);\n\n  const sendMessage = (event) => {\n    event.preventDefault()\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('')  \n  }\n\n  return (\n    <div className=\"App\">\n      <img className=\"app__logo\" src=\"https://i.pinimg.com/originals/98/4d/b3/984db3f9cabcf67479806c19882adc7e.png\"/>\n      <h1>FB Messenger Clone</h1>\n      <h4 style={{ display: username ? 'block' : 'none' }}>Hey {username}!</h4>\n    \n      <FlipMove className=\"app_flipMove\">\n        {\n          messages.map(({id, message}) => (\n            <Message key={id} username={username} message={message}/>\n          ))\n        }\n      </FlipMove>\n      <div ref={messagesEndRef} />\n\n      <form className=\"app__form\" onSubmit={sendMessage}>\n        <FormControl className=\"app__formControl\">\n          <Input\n            className=\"app__input\"\n            type=\"text\"\n            name=\"input\"\n            value={input}\n            onChange={event => setInput(event.target.value)}\n            autoComplete=\"off\"\n            placeholder=\"Type a message...\"\n          />\n          <IconButton\n            className=\"app__iconButton\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!input}\n          >\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}